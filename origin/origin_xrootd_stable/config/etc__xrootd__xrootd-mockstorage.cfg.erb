### SET VARIABLES ###

set xrdPort=1094
set originDataPath=/data/xrd
set originLogLevel=debug

### GENERAL CONFIGURATION ###

all.export /

oss.localroot $originDataPath

xrootd.seclib /usr/lib64/libXrdSec.so

##### SECURITY CONFIGURATION ######
# use gsi as client-cache authN method
sec.protocol /usr/lib64 gsi \
  -certdir:/etc/grid-security/certificates \
  -cert:/etc/grid-security/hostcert.pem \
  -key:/etc/grid-security/hostkey.pem \
  -crl:1 \
  -ca:1 \
  -gridmap:/dev/null -vomsat:1 -vomsfun:libXrdSecgsiVOMS.so
  # In case the /etc/grid-security/grid-mapfile is used, which contain the mapping of the XCache DN to the user ewp2c01, the following can be used:
  #-gridmap:/etc/grid-security/grid-mapfile

# use gsi user<-->namespace mapping file as client-cache authZ method
acc.audit deny
acc.authdb /etc/xrootd/Authfile
sec.protbind * gsi

acc.authrefresh 60
acc.gidlifetime 60
ofs.authorize

### HTTP(S) and Tokens

xrd.protocol http:$xrdPort libXrdHttp.so
http.cadir /etc/grid-security/certificates
http.cert  /etc/grid-security/hostcert.pem
http.key   /etc/grid-security/hostkey.pem
http.secxtractor libXrdSecgsiVOMS.so vos=atlas,cms,escape,dteam|grpopt=02|dbg
http.listingdeny yes
http.header2cgi Authorization authz

# Enable the SciTokens authorization library
ofs.authlib libXrdAccSciTokens.so config=/etc/xrootd/scitokens.cfg
http.staticpreload http://static/robots.txt /etc/xrootd/robots.txt

# Uncomment the following line to get extensive debugging information 
# logging level for all the different activities
#xrootd.trace all $originLogLevel
#xrd.trace    all $originLogLevel
#ofs.trace    all $originLogLevel
sec.trace    all $originLogLevel
#http.trace   all $originLogLevel 

xrootd.trace emsg fs redirect request auth
ofs.trace all debug
http.trace auth
